version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: relativity_devhub_postgres
    environment:
      POSTGRES_DB: relativity_devhub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - relativity_devhub_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: relativity_devhub_redis
    ports:
      - '6379:6379'
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - relativity_devhub_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: relativity_devhub_auth_service
    environment:
      NODE_ENV: development
      PORT: 3001
      API_PREFIX: api/v1
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: admin123
      DB_DATABASE: relativity_devhub
      DB_SYNCHRONIZE: true
      DB_LOGGING: true
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      REDIS_DB: 0
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_REFRESH_EXPIRES_IN: 7d
      SWAGGER_TITLE: RelativityDevHub Auth API
      SWAGGER_DESCRIPTION: Authentication service for RelativityDevHub
      SWAGGER_VERSION: 1.0
      SWAGGER_TAG: auth
      BCRYPT_ROUNDS: 12
      RATE_LIMIT_TTL: 60
      RATE_LIMIT_LIMIT: 100
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - relativity_devhub_network
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev

volumes:
  postgres_data:
  redis_data:

networks:
  relativity_devhub_network:
    driver: bridge
